package com.bkj.search.gui;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;


/**
 * @see java.lang.Runnable
 * @since 0.1
 */
public class AboutDialog extends JDialog
        implements Runnable {

    private JPanel contentPane;
    private JButton buttonOK;
    private JButton buttonCancel;

    /**
     * Sets up and creates the About Dialog
     * <p>
     * You still need to run the AboutDialog::run method to display the window
     * preferably with SwingUtilities.InvokeLater(new AboutDialog());
     * </p>
     */
    public AboutDialog() {
        setContentPane(contentPane);
        setModal(true);
        getRootPane().setDefaultButton(buttonOK);

        buttonOK.addActionListener((ActionEvent e) -> onOK());

        buttonCancel.addActionListener((ActionEvent e) -> onCancel());

        // call onCancel() when cross is clicked instead of disposing the window
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        // This cannot be converted to a lambda because WindowAdapter is not a functional interface
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                onCancel();
            }
        });

        // call onCancel() on ESCAPE
        contentPane.registerKeyboardAction(e -> onCancel(),
                KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
                JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
    }


    /**
     * calls JDialog::pack and sets the dialog visible
     * @see java.lang.Runnable
     */
    @Override
    public void run() {
        pack();
        setVisible(true);
    }


    /**
     * Handles on exit tasks when 'Ok' is pressed
     */
    private void onOK() {
        // add your code here
        dispose();
    }

    /**
     * Handles on exit tasks when 'Cancel' is pressed or exiting
     */
    private void onCancel() {
        // add your code here if necessary
        dispose();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new BorderLayout(0, 0));
        contentPane.setPreferredSize(new Dimension(300, 200));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        contentPane.add(panel1, BorderLayout.CENTER);
        final JLabel label1 = new JLabel();
        label1.setText("Label");
        panel1.add(label1, BorderLayout.CENTER);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        contentPane.add(panel2, BorderLayout.SOUTH);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(0, 0));
        panel2.add(panel3, BorderLayout.CENTER);
        buttonOK = new JButton();
        buttonOK.setPreferredSize(new Dimension(100, 30));
        buttonOK.setText("OK");
        panel3.add(buttonOK, BorderLayout.WEST);
        buttonCancel = new JButton();
        buttonCancel.setPreferredSize(new Dimension(35, 30));
        buttonCancel.setText("Close");
        panel3.add(buttonCancel, BorderLayout.CENTER);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
