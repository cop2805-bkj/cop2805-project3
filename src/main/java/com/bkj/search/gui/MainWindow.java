package com.bkj.search.gui;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

/**
 * Created by bclaus on 2/9/17.
 */
public class MainWindow {
    private JPanel mainPane;
    private JButton doSearchButton;
    private JTextField searchTextField;
    private JTabbedPane tabbedPane1;
    private JTable resultsTable;
    private JProgressBar progressBar1;
    private JButton chooseFilesButton;
    private JList<String> searchFilesList;
    private JButton removeSelectedFileButton;

    private DefaultListModel<String> listModel;
    private JFileChooser searchFilesChooser;
    private int fcRetval;

    public MainWindow() {
        $$$setupUI$$$();

        searchFilesChooser = new JFileChooser();

        doSearchButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                NotImplementedDialog d = new NotImplementedDialog("Not Implemented", "Searching does not work yet");
            }
        });


        chooseFilesButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                int fcRetVal = searchFilesChooser.showOpenDialog(mainPane);

                if (fcRetval == JFileChooser.APPROVE_OPTION) {
                    File file = searchFilesChooser.getSelectedFile();
                    //This is where a real application would open the file.
                    listModel.addElement(file.toPath().toString());
                    //searchFilesList.setModel(listModel);
                } else {
                    // Canceled
                }
            }
        });


        removeSelectedFileButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                try {
                    listModel.remove(searchFilesList.getSelectedIndex());
                } catch (ArrayIndexOutOfBoundsException aie) {
                    NotImplementedDialog d = new NotImplementedDialog("Whoops!", "Select a file to remove");
                }
            }
        });
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        // Note that this is not the place for NEW components
        // It is only to setup components that have been marked custom

        listModel = new DefaultListModel<String>();
        searchFilesList = new JList<>(listModel);

        String[] columnNames = {"Name",
                "Super Power",
                "Can Fly?"};

        Object[][] data = {
                {"Batman", "Money", Boolean.FALSE},
                {"Superman", "Everything", Boolean.TRUE},
                {"Flash", "Really fast", Boolean.FALSE},
                {"Goku", "Can't Die :^)", Boolean.TRUE},
                {"The Hulk", "The Ability to turn into a doctor",  Boolean.FALSE}
        };

        resultsTable = new JTable(data, columnNames);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        mainPane = new JPanel();
        mainPane.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        mainPane.add(panel1, BorderLayout.NORTH);
        panel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), null));
        final JLabel label1 = new JLabel();
        label1.setText("Search ");
        panel1.add(label1);
        searchTextField = new JTextField();
        searchTextField.setColumns(20);
        panel1.add(searchTextField);
        doSearchButton = new JButton();
        doSearchButton.setText("Go");
        panel1.add(doSearchButton);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        mainPane.add(panel2, BorderLayout.CENTER);
        tabbedPane1 = new JTabbedPane();
        panel2.add(tabbedPane1, BorderLayout.CENTER);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(0, 0));
        tabbedPane1.addTab("Search Results", panel3);
        final JScrollPane scrollPane1 = new JScrollPane();
        panel3.add(scrollPane1, BorderLayout.CENTER);
        resultsTable.putClientProperty("Table.isFileList", Boolean.FALSE);
        scrollPane1.setViewportView(resultsTable);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new BorderLayout(0, 0));
        tabbedPane1.addTab("Settings", panel4);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new BorderLayout(0, 0));
        panel4.add(panel5, BorderLayout.NORTH);
        chooseFilesButton = new JButton();
        chooseFilesButton.setText("Choose Files...");
        panel5.add(chooseFilesButton, BorderLayout.CENTER);
        panel4.add(searchFilesList, BorderLayout.CENTER);
        removeSelectedFileButton = new JButton();
        removeSelectedFileButton.setHorizontalAlignment(0);
        removeSelectedFileButton.setText("Remove Selected File");
        panel4.add(removeSelectedFileButton, BorderLayout.SOUTH);
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new BorderLayout(0, 0));
        tabbedPane1.addTab("Database Administration", panel6);
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new BorderLayout(0, 0));
        mainPane.add(panel7, BorderLayout.SOUTH);
        final JToolBar toolBar1 = new JToolBar();
        panel7.add(toolBar1, BorderLayout.CENTER);
        progressBar1 = new JProgressBar();
        toolBar1.add(progressBar1);
        label1.setLabelFor(searchTextField);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPane;
    }
}
