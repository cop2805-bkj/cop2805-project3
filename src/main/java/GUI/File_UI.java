package GUI;

import java.awt.FileDialog;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.text.BadLocationException;

/**
 *
 * @author Jonathan Llaneras
 */
public class File_UI extends javax.swing.JFrame {

    /**
     * Creates new form Files_UI
     */
    public File_UI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filesPanel = new javax.swing.JPanel();
        filesTitleLabel = new javax.swing.JLabel();
        fileAddButton = new javax.swing.JButton();
        filesScrollPane = new javax.swing.JScrollPane();
        filesTextArea = new javax.swing.JTextArea();
        fileRemoveButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();

        filesTitleLabel.setFont(new java.awt.Font("Times New Roman", 3, 30)); // NOI18N
        filesTitleLabel.setText("Add/Remove Files");

        fileAddButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        fileAddButton.setText("Add");
        fileAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileAddButtonActionPerformed(evt);
            }
        });

        filesTextArea.setColumns(20);
        filesTextArea.setRows(5);
        filesTextArea.setWrapStyleWord(true);
        filesScrollPane.setViewportView(filesTextArea);
        filesTextArea.getAccessibleContext().setAccessibleDescription("");

        fileRemoveButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        fileRemoveButton.setText("Remove");
        fileRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileRemoveButtonActionPerformed(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        saveButton.setText("Save");
        saveButton.setToolTipText("Saves files to text file for next use...");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout filesPanelLayout = new javax.swing.GroupLayout(filesPanel);
        filesPanel.setLayout(filesPanelLayout);
        filesPanelLayout.setHorizontalGroup(
            filesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filesPanelLayout.createSequentialGroup()
                        .addComponent(filesTitleLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(filesPanelLayout.createSequentialGroup()
                        .addGroup(filesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fileAddButton, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .addComponent(fileRemoveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)))
                .addContainerGap())
        );
        filesPanelLayout.setVerticalGroup(
            filesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filesTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filesPanelLayout.createSequentialGroup()
                        .addComponent(fileAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileRemoveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(filesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(filesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(filesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Adds files with full pathname to the text area
    private void fileAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileAddButtonActionPerformed
    
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("Users"));
        chooser.setDialogTitle("File Explorer");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);

        File_Add file = new File_Add() {};
        file.run();
        String pathName = file.pathName();
        filesTextArea.append(pathName + "\n");    
    }//GEN-LAST:event_fileAddButtonActionPerformed

    // Removes files one line at a time
    private void fileRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileRemoveButtonActionPerformed
        int end = 0;
        try {
            end = filesTextArea.getLineEndOffset(0);
        } catch (BadLocationException ex) {
            Logger.getLogger(File_UI.class.getName()).log(Level.SEVERE, null, ex);
        }
        filesTextArea.replaceRange("", 0, end);
    }//GEN-LAST:event_fileRemoveButtonActionPerformed

    @SuppressWarnings("CallToPrintStackTrace")
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        String getText = filesTextArea.getText();
        
        if (getText.length() > 0) {
            JFileChooser jfc = new JFileChooser();
            jfc.setCurrentDirectory(new java.io.File("Users"));
            int retrival = jfc.showSaveDialog(null);
            if (retrival == JFileChooser.APPROVE_OPTION) {
                   try {
                       FileWriter fw = new FileWriter(jfc.getSelectedFile() + ".txt");
                       fw.write(getText);
                   } catch (IOException ex) {
                       ex.printStackTrace();
                   }
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    public static void main(String args[]) {
       
        // Gets look and feel for UI with try catch
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(File_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        // Create and display the form 
        java.awt.EventQueue.invokeLater(() -> {
            new File_UI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton fileAddButton;
    private javax.swing.JButton fileRemoveButton;
    private javax.swing.JPanel filesPanel;
    private javax.swing.JScrollPane filesScrollPane;
    public static javax.swing.JTextArea filesTextArea;
    private javax.swing.JLabel filesTitleLabel;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
